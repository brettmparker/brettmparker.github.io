[
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "About Me",
    "section": "",
    "text": "Hello, my name is Brett Parker and I am a junior sports media and communication student at the University of Nebraska-Lincoln. I am originally from Shawnee, KS, but came to Nebraska in hopes of change. My strengths include writing, creating audio, and editing audio."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Is Troy Aikman Overrated?",
    "section": "",
    "text": "Let’s look at the stats.\nUsing data found from Sports Reference pro football site, we can look deeper into the numbers and beyond the Super Bowl wins.\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.1\n✔ readr   2.1.2     ✔ forcats 0.5.2\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\nCode\nlibrary(ggalt)\n\n\nRegistered S3 methods overwritten by 'ggalt':\n  method                  from   \n  grid.draw.absoluteGrob  ggplot2\n  grobHeight.absoluteGrob ggplot2\n  grobWidth.absoluteGrob  ggplot2\n  grobX.absoluteGrob      ggplot2\n  grobY.absoluteGrob      ggplot2\n\n\nCode\nlibrary(ggbeeswarm)\nlibrary(ggbump)\nlibrary(ggrepel)\nlibrary(dplyr)\nlibrary(gt)\nsevenfive <- read_csv(\"1975.csv\")\n\n\nNew names:\nRows: 99 Columns: 30\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(5): Player, Tm, Pos, QBrec, Player-additional dbl (25): Rk, Age, G, GS, Cmp,\nAtt, Cmp%, Yds...12, TD, TD%, Int, Int%, Lng,...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `Yds` -> `Yds...12`\n• `Yds` -> `Yds...24`\n\n\nCode\neightfive <- read_csv(\"1985.csv\")\n\n\nNew names:\nRows: 109 Columns: 30\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(5): Player, Tm, Pos, QBrec, Player-additional dbl (25): Rk, Age, G, GS, Cmp,\nAtt, Cmp%, Yds...12, TD, TD%, Int, Int%, Lng,...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `Yds` -> `Yds...12`\n• `Yds` -> `Yds...24`\n\n\nCode\nninefive <- read_csv(\"1995.csv\")\n\n\nNew names:\nRows: 103 Columns: 31\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(5): Player, Tm, Pos, QBrec, Player-additional dbl (26): Rk, Age, G, GS, Cmp,\nAtt, Cmp%, Yds...12, TD, TD%, Int, Int%, 1D, ...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `Yds` -> `Yds...12`\n• `Yds` -> `Yds...25`\n\n\nCode\nzerofive <- read_csv(\"2005.csv\")\n\n\nNew names:\nRows: 98 Columns: 31\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(5): Player, Tm, Pos, QBrec, Player-additional dbl (26): Rk, Age, G, GS, Cmp,\nAtt, Cmp%, Yds...12, TD, TD%, Int, Int%, 1D, ...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `Yds` -> `Yds...12`\n• `Yds` -> `Yds...25`\n\n\nCode\nonefive <- read_csv(\"2015.csv\")\n\n\nNew names:\nRows: 86 Columns: 32\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(5): Player, Tm, Pos, QBrec, Player-additional dbl (27): Rk, Age, G, GS, Cmp,\nAtt, Cmp%, Yds...12, TD, TD%, Int, Int%, 1D, ...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `Yds` -> `Yds...12`\n• `Yds` -> `Yds...26`\n\n\nCode\nlastseason <- read_csv(\"2021.csv\")\n\n\nNew names:\nRows: 115 Columns: 32\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(5): Player, Tm, Pos, QBrec, Player-additional dbl (27): Rk, Age, G, GS, Cmp,\nAtt, Cmp%, Yds...12, TD, TD%, Int, Int%, 1D, ...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `Yds` -> `Yds...12`\n• `Yds` -> `Yds...26`\n\n\nCode\naikman <- read_csv(\"aikmanstats.csv\")\n\n\nNew names:\nRows: 13 Columns: 32\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(6): Year, Age, Tm, Pos, QBrec, Awards dbl (26): No., G, GS, Cmp, Att, Cmp%,\nYds...12, TD, TD%, Int, Int%, 1D, Lng,...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `Yds` -> `Yds...12`\n• `Yds` -> `Yds...25`\n\n\nCode\npassing <- read_csv(\"alltime.csv\")\n\n\nRows: 250 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): Player, Years, Tm, Player-additional\ndbl (2): Rank, Yds\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nhof <- read_csv(\"hof.csv\")\n\n\nNew names:\nRows: 306 Columns: 33\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(3): Player, Pos, -9999 dbl (30): Rk, Indct, From, To, AP1, PB, St, wAV, G,\nCmp, Att...13, Yds...14,...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `Att` -> `Att...13`\n• `Yds` -> `Yds...14`\n• `TD` -> `TD...15`\n• `Lng` -> `Lng...16`\n• `Int` -> `Int...17`\n• `Sk` -> `Sk...18`\n• `Yds` -> `Yds...19`\n• `Att` -> `Att...20`\n• `Yds` -> `Yds...21`\n• `TD` -> `TD...22`\n• `Lng` -> `Lng...23`\n• `Yds` -> `Yds...25`\n• `TD` -> `TD...26`\n• `Lng` -> `Lng...27`\n• `TD` -> `TD...29`\n• `Sk` -> `Sk...31`\n• `Int` -> `Int...32`\n\n\nCode\ngwd <- read_csv(\"gwd.csv\")\n\n\nRows: 259 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): Player, Years, Tm, Link, Player-additional\ndbl (2): Rank, GWD\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npassingtop50 <- passing %>% filter(Rank == 1:50) %>%\n  select(Player, Rank, Yds, Years) %>%\n  separate(Years, into=c(\"Drafted\", \"Retired\"), sep=\"-\") %>%\n  mutate(\n    Seasons = strtoi(Retired) - strtoi(Drafted)\n  )\n\naikman95 <- aikman %>%\n  filter(Year == \"1995*\")%>%\n  mutate(\n    `TD:INT` = TD/Int) %>%\n  separate(QBrec, into=c(\"Wins\", \"Losses\", \"Ties\"), sep=\"-\")\n\nsevenfive2 <- sevenfive %>%\n  filter(Att > 100) %>%\n  mutate(\n    `TD:INT` = TD/Int\n  ) %>%\n  separate(QBrec, into=c(\"Wins\", \"Losses\", \"Ties\"), sep=\"-\")\n\neightfive2 <- eightfive %>%\n  filter(Att > 100)%>%\n  mutate(\n    `TD:INT` = TD/Int) %>%\n  separate(QBrec, into=c(\"Wins\", \"Losses\", \"Ties\"), sep=\"-\")\n\nninefive2 <- ninefive %>%\n  filter(Att > 100)%>%\n  mutate(\n    `TD:INT` = TD/Int) %>%\n  separate(QBrec, into=c(\"Wins\", \"Losses\", \"Ties\"), sep=\"-\")\n\nzerofive2 <- zerofive %>%\n  filter(Att > 100)%>%\n  mutate(\n    `TD:INT` = TD/Int) %>%\n  separate(QBrec, into=c(\"Wins\", \"Losses\", \"Ties\"), sep=\"-\")\n\nonefive2 <- onefive %>%\n  filter(Att > 100)%>%\n  mutate(\n    `TD:INT` = TD/Int) %>%\n  separate(QBrec, into=c(\"Wins\", \"Losses\", \"Ties\"), sep=\"-\")\n\nlastseason2 <- lastseason %>%\n  filter(Att > 100)%>%\n  mutate(\n    `TD:INT` = TD/Int) %>%\n  separate(QBrec, into=c(\"Wins\", \"Losses\", \"Ties\"), sep=\"-\")\n\naikmancareer <- aikman %>%\n  filter(Year == \"Career\") %>%\n  mutate(\n    `TD:Int` = TD/Int) %>%\n  separate(QBrec, into=c(\"Wins\", \"Losses\", \"Ties\"), sep=\"-\") %>%\n  data.frame(AP1 = c(0))\n\nhofqb <- hof %>% filter(Pos == \"QB\") %>%\n  select(Player, From, To, AP1, PB, Cmp, Att...13, Yds...14, TD...15, Int...17) %>%\n  mutate(\n    `TD:Int` = `TD...15`/`Int...17`\n  ) %>%\n  mutate(\n    Seasons = strtoi(To) - strtoi(From)\n  ) %>%\n  mutate(\n    `Yds/Season` = Yds...14 / Seasons\n  ) %>%\n  mutate(\n    `TD/Season` = mean(TD...15) / Seasons\n  )\n\ngamewinners <- gwd %>% select(Player, GWD, Years) %>%\n  separate(Years, into=c(\"Drafted\", \"Retired\"), sep=\"-\") %>%\n  mutate(\n    Seasons = strtoi(Retired) - strtoi(Drafted)\n  ) %>%\n  filter(GWD > 19) %>%\n  filter(Seasons < 15)\nhofqbs <- hofqb %>% select(Player, Yds...14, TD...15, Int...17, `TD:Int`, Seasons, AP1, PB, `TD/Season`) %>%\n  group_by(Player) %>%\n  mutate(\n    `Yds/Season` = Yds...14/Seasons\n  ) %>%\n  mutate(\n    TotalAP1 = sum(AP1)\n  ) %>%\n  mutate(\n    TotalPB = sum(PB)\n  )\naikmanhof <- hofqb %>% \n  filter(Player == \"Troy Aikman\")\nhofqb1 <- hofqb %>% \n  select(AP1, PB) %>%\n  summarise(\n  `AvgAP1`= mean(AP1),\n   AvgPB = mean(PB)\n )\nhofwide <- hofqbs %>% \n  pivot_longer(\n    cols=starts_with(\"Total\"), \n    names_to=\"Key\", \n    values_to=\"AP1 & PB\")\n\nhallqb <- hofqb1 %>%\npivot_longer(\n    cols=starts_with(\"Avg\"), \n    names_to=\"Key\", \n    values_to=\"AP1 & PB\")\nhallqb$average = \"Average\"\nmodernera <- hofqb %>%\n  select(Player, From, Yds...14, TD...15, Int...17) %>%\n  filter(From > 1969) %>%\n  mutate(\n    `TD:Int` = TD...15/Int...17\n  )\nmahomes <- lastseason2 %>% filter(Player == \"Patrick Mahomes*\")\n\n\nFirst, it’s important to look at accolades from the regular season. Here we will compare every Hall of Fame quarterbacks First Team All-Pro selections and Pro Bowl selections to each other and an average.\n\n\nCode\nggplot() + \n  geom_bar(data=hofwide, aes(x=reorder(Player, `AP1 & PB`), weight=`AP1 & PB`, fill=Key)) +\n  geom_bar(data=hallqb, aes(x=reorder(average, `AP1 & PB`), weight=`AP1 & PB`, fill=Key)) +\n  coord_flip() +\n  labs(\n    x= \"Hall of Fame Quarterbacks\",\n    y= \"All-Pro and Pro Bowl Selections\",\n    title= \"What does an average NFL Hall of Fame resume look like?\",\n    subtitle= \"Aikman's appearances on the All-Pro team and Pro Bowl fall below the average for an NFL QB.\",\n    caption= \"Source: Pro Football Reference | By Brett Parker\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 15, face = \"bold\"),\n    axis.title = element_text(size = 8),\n    plot.subtitle = element_text(size = 10),\n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\nAikman was selected to a Hall of Fame average 6 Pro Bowls, but failed to find himself selected as a First Team All-Pro. However, accolades aren’t everything. The best quarterbacks produce in the clutch. The next graph will list every quarterback who played at least 15 seasons in the NFL with 20 game winning drives.\n\n\nCode\ngamewinners %>% \n  gt() %>% \n  cols_label(\n    Player = \"Player\",\n    GWD = \"Game-winning Drives\",\n    Seasons = \"Seasons Played\"\n  ) %>%\n  tab_header(\n    title = \"Game Winners\",\n    subtitle = \"Although Aikman is one of 31 quarterbacks with 20 or more game-winning drives in under 15 seasons, he is tied for last.\"\n  ) %>% tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %>% tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) %>%\n  tab_source_note(\n    source_note = md(\"**By:** Brett Parker  |  **Source:** Pro Football Reference\")\n  ) %>%\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=12)\n     )\n   ) %>%\n  opt_row_striping() %>% \n  opt_table_lines(\"none\") %>%\n  tab_style(\n    style = list(\n      cell_fill(color = \"blue\"),\n      cell_text(color = \"white\")\n      ),\n    locations = cells_body(\n      rows = Player == \"Troy Aikman+\")\n  )\n\n\n\n\n\n\n  \n    \n      Game Winners\n    \n    \n      Although Aikman is one of 31 quarterbacks with 20 or more game-winning drives in under 15 seasons, he is tied for last.\n    \n  \n  \n    \n      Player\n      Game-winning Drives\n      Drafted\n      Retired\n      Seasons Played\n    \n  \n  \n    Matt Ryan\n45\n2008\n2022\n14\n    Matthew Stafford\n42\n2009\n2022\n13\n    Carson Palmer\n35\n2004\n2017\n13\n    Russell Wilson\n35\n2012\n2022\n10\n    Drew Bledsoe\n31\n1993\n2006\n13\n    Derek Carr\n31\n2014\n2022\n8\n    Jake Plummer\n30\n1997\n2006\n9\n    Andy Dalton\n29\n2011\n2022\n11\n    Tony Romo\n29\n2004\n2016\n12\n    Jay Cutler\n28\n2006\n2017\n11\n    Jim Kelly+\n28\n1986\n1996\n10\n    Brad Johnson\n27\n1994\n2008\n14\n    Boomer Esiason\n26\n1984\n1997\n13\n    Ryan Tannehill\n26\n2012\n2022\n10\n    Joe Flacco\n25\n2008\n2022\n14\n    Jake Delhomme\n24\n1999\n2011\n12\n    Donovan McNabb\n24\n1999\n2011\n12\n    Terry Bradshaw+\n23\n1970\n1983\n13\n    Kirk Cousins\n23\n2012\n2022\n10\n    Dan Fouts+\n23\n1973\n1987\n14\n    Brian Sipe\n23\n1974\n1983\n9\n    Ken Stabler+\n23\n1970\n1984\n14\n    Jon Kitna\n22\n1997\n2011\n14\n    Joe Theismann\n22\n1974\n1985\n11\n    Steve Bartkowski\n21\n1975\n1986\n11\n    Steve McNair\n21\n1995\n2007\n12\n    Roger Staubach+\n21\n1969\n1979\n10\n    Troy Aikman+\n20\n1989\n2000\n11\n    Andrew Luck\n20\n2012\n2018\n6\n    Cam Newton\n20\n2011\n2021\n10\n    Doug Williams\n20\n1978\n1989\n11\n  \n  \n    \n      By: Brett Parker  |  Source: Pro Football Reference\n    \n  \n  \n\n\n\n\nWow. Aikman tied Andrew Luck for last on this list. Andrew Luck played 6 seasons. The next chart will compare Aikman’s career TD:INT ratio to the other Hall of Fame QBs who were drafted in 1970 or later. Aikman threw for 165 touchdowns and 141 interceptions in his career.\n\n\nCode\nggplot() + \n  geom_dumbbell(\n    data=modernera, \n    aes(y=Player, x=TD...15, xend=Int...17),\n    size = 2,\n    colour = \"grey\",\n    colour_x = \"dark green\",\n    colour_xend = \"dark red\") + \n  labs(\n    x= \"Passing Touchdowns vs. Interceptions\",\n    y= \"Quarterback\",\n    title= \"HOF Quarterbacks TD's vs. Int's since 1970\",\n    subtitle= \"Troy Aikman owns the fourth lowest of any Hall of Fame QB since 1970.\",\n    caption= \"Source: Pro Football Reference | By Brett Parker\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 20, face = \"bold\"),\n    axis.title = element_text(size = 8),\n    plot.subtitle = element_text(size = 10),\n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\nAikman holds the fourth worst TD:INT ratio since 1970 for Hall of Fame QBs and the worst of any QB in the Hall drafted after 1980. The next charts provided will help us compare Troy Aikman to other era’s. Using passer rating and passing attempts, we will look into how efficient he was with the amount of passes he made. We will use his best season (1995) as he was voted 5th in MVP that season.\n\n\nCode\nggplot() + \n  geom_point(data=sevenfive2, aes(x=Rate, y=Att)) +\n  geom_point(data=aikman95, aes(x=Rate, y=Att), color = \"blue\") +\n  labs(title=\"Aikman the Great?\", subtitle=\"Troy Aikman would have been considered an elite QB in the '75 season..\", x=\"Passer Rating\", y=\"Passing Attempts\", caption= \"Source: Pro Football Reference | By Brett Parker\") + \n  theme_gray() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\n\n\n\n\nI’ll give it to him, Aikman would have been a superstar in 1975. I know it’s not fair to compare era’s, however, it’s still interesting to see changes. In the next graph, we will compare him to the 1985 season.\n\n\nCode\nggplot() + \n  geom_point(data=eightfive2, aes(x=Rate, y=Att)) +\n  geom_point(data=aikman95, aes(x=Rate, y=Att), color = \"blue\") +\n  labs(title=\"The Elites of '85\", subtitle=\"Aikman finds himself as a top QB efficiency wise still.\", x=\"Passer Rating\", y=\"Passing Attempts\") + \n  theme_gray() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\n\n\n\n\nAikman seemed to have thrown a more average amount of attempts, but his passer rating was still great for the season. Next, we will compare his MVP season to the season it happened in 1995.\n\n\nCode\nggplot() + \n  geom_point(data=ninefive2, aes(x=Rate, y=Att)) +\n  geom_point(data=aikman95, aes(x=Rate, y=Att), color = \"blue\") +\n  labs(title=\"Aikman vs. His Era\", subtitle=\"In 1995, Aikman's best season was efficient with an average amount of attempts.\", x=\"Passer Rating\", y=\"Passing Attempts\", caption= \"Source: Pro Football Reference | By Brett Parker\") + \n  theme_gray() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\n\n\n\n\nAikman was efficient, but really didn’t throw the ball. His closest season to an MVP on paper looks more average than not. Just for fun, here are graphs comparing Aikman’s stats to the 2005, 2015, and 2021 seasons.\n\n\nCode\nggplot() + \n  geom_point(data=zerofive2, aes(x=Rate, y=Att)) +\n  geom_point(data=aikman95, aes(x=Rate, y=Att), color = \"blue\") +\n  labs(title=\"Where would Aikman stand in '05?\", subtitle=\"The best season from the Cowboys Hall of Fame quarterback would have been on par with average starters.\", x=\"Passer Rating\", y=\"Passing Attempts\", caption=\"Source: Pro Football Reference | By Brett Parker\")  + \n  theme_gray() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\n\n\n\n\n\n\nCode\nggplot() + \n  geom_point(data=onefive2, aes(x=Rate, y=Att)) +\n  geom_point(data=aikman95, aes(x=Rate, y=Att), color = \"blue\") +\n  labs(title=\"Where is Aikman in 2015?\", subtitle=\"If Aikman were a QB in 2015, he would be an average to below average starter.\", x=\"Passer Rating\", y=\"Passing Attempts\", caption= \"Source: Pro Football Reference | By Brett Parker\") + \n  theme_gray() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\n\n\n\n\n\n\nCode\nggplot() + \n  geom_point(data=lastseason2, aes(x=Rate, y=Att), color = \"grey\") +\n  geom_point(data=aikman95, aes(x=Rate, y=Att), color = \"blue\") +\n  geom_point(data=mahomes, aes(x= Rate, y=Att), color = \"red\") +\n  labs(title=\"Aikman talks a lot on Mahomes...\", subtitle=\"Aikman talks a lot about Mahomes in condescending ways, but cannot back it up.\", x=\"Passer Rating\", y=\"Passing Attempts\", caption= \"Source: Pro Football Reference | By Brett Parker\") + \n  theme_gray() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\n\n\n\n\nYes, the last one was a little unnecessary, but it was fun. Looking at the other charts on this list, however, Aikman never proved himself beyond being an above average to good quarterback in the National Football League."
  },
  {
    "objectID": "posts/offense-v-defense/index.html",
    "href": "posts/offense-v-defense/index.html",
    "title": "Was Offense or Defense more valuable in the 2021 NFL season?",
    "section": "",
    "text": "The Los Angeles Rams were the crowned champions at the end of the 2021 season after defeating an offensive juggernaut in the Cincinnati Bengals. With both a good offense and defense, it is hard to know which one was more important without looking deeper.\nTo find out if offense or defense (or neither) is more important, we need to look at the stats. Using Pro Football References database of all things football, we can figure out if offense or defense reigns supreme.\n\n\nCode\nlibrary(tidyverse)\nlibrary(ggrepel)\nlibrary(gt)\nlibrary(ggalt)\n\ndef21 <- read_csv(\"2021def.csv\")\noff21 <- read_csv(\"off21.csv\")\nnflstandings <- read_csv(\"nflstandings.csv\")\nplayoffteams <- read_csv(\"playoffs21.csv\")\nexpected <- read_csv(\"expected21.csv\")\nexpectedavg <- read_csv(\"expwavg.csv\")\nstats <- read_csv(\"stats.csv\")\n\ndef2021 <- def21 %>%\n  filter(Rk == 1:32) %>%\n  mutate(\n    AvgP = mean(PA)\n  )\n\ndefwin <- def2021 %>%\n  mutate(\n    `DefExW%` = ((AvgP^2)/(AvgP^2+PA^2))*100,\n    `DefAvgExW%` = mean(`DefExW%`)\n  )\n\noff2021 <- off21 %>%\n  filter(Rk == 1:32) %>%\n  mutate(\n    AvgP = mean(PF)\n  )\n\noffwin <- off2021 %>%\n  mutate(\n    `OffExW%` = ((PF^2)/(AvgP^2+PF^2))*100,\n    `OffAvgExW%` = mean(`OffExW%`)\n  )\n\nstandings21 <- nflstandings %>%\n  mutate(\n    AvgOSRS = mean(OSRS),\n    AvgDSRS = mean(DSRS),\n    `Win%` = (`W-L%`)*100\n  )\n\nexpected21 <- expected %>%\n  mutate(\n    `OffExWin%` = (`OffExWin%`)/100,\n    `DefExWin%` = (`DefExWin%`)/100,\n    `ActualWin%` = (`ActualWin%`)/100\n  )\n\nstandingsosrs <- nflstandings %>%\n  filter(\n    Tm == \"Buffalo Bills*\" |\n    Tm == \"Kansas City Chiefs*\" |\n    Tm == \"Dallas Cowboys*\" |\n    Tm == \"Philadelphia Eagles\" |\n    Tm == \"Tampa Bay \" |\n    Tm == \"Arizona Cardinals+\" |\n    Tm == \"Tennessee Titans*\" |\n    Tm == \"Tampa Bay Buccaneers*\" |\n    Tm == \"Los Angeles Rams*\" |\n    Tm == \"Indianapolis Colts\" |\n    Tm == \"Green Bay Packers*\" |\n    Tm == \"Philadelphia Eagles+\" |\n    Tm == \"Cincinnati Bengals*\" |\n    Tm == \"Detroit Lions\" |\n    Tm == \"Atlanta Falcons\" |\n    Tm == \"New York Jets\" |\n    Tm == \"Minnesota Vikings\"\n  )\n\nstandingsdsrs <- nflstandings %>%\n  filter(\n    Tm == \"New York Giants\" |\n    Tm == \"New England Patriots+\" |\n    Tm == \"Jacksonville Jaguars\" |\n    Tm == \"Houston Texans\" |\n    Tm == \"Carolina Panthers\" |\n    Tm == \"Denver Broncos\" |\n    Tm == \"New Orleans Saints\" |\n    Tm == \"San Francisco 49ers+\" |\n    Tm == \"Seattle Seahawks\" |\n    Tm == \"Cleveland Browns\" |\n    Tm == \"Miami Dolphins\" |\n    Tm == \"Pittsburgh Steelers+\" |\n    Tm == \"Baltimore Ravens\" |\n    Tm == \"Chicago Bears\" |\n    Tm == \"Washington Football Team\" \n  )\n\nsummarisedef <- standingsdsrs %>%\n  summarise(\n    `Average Wins` = mean(W),\n    `Average Losses` = mean(L)\n  )\n\nsummariseoff <- standingsosrs %>%\n  summarise(\n    `Average Wins` = mean(W),\n    `Average Losses` = mean(L)\n  )\n\nrams <- standings21 %>%\n  filter(Tm == \"Los Angeles Rams*\")\nchiefs <- standings21 %>%\n  filter(Tm == \"Kansas City Chiefs*\")\nbengals <- standings21 %>%\n  filter(Tm == \"Cincinnati Bengals*\")\nbucs <- standings21 %>%\n  filter(Tm == \"Tampa Bay Buccaneers*\")\n\n\nL\n\n\nCode\nexpected21 %>% \n  gt() %>% \n  cols_label(\n    `OffExWin%` = \"Expected Offense Win %\",\n    `DefExWin%` = \"Expected Defense Win %\",\n    `ActualWin%` = \"Actual Win %\"\n  ) %>%\n  tab_header(\n    title = \"Would an average defense beat an average offense in Win%?\",\n    subtitle = \"The data is pretty evened out.\"\n  ) %>% tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %>% tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) %>%\n  tab_source_note(\n    source_note = md(\"**By:** Brett Parker  |  **Source:** Pro Football Reference\")\n  ) %>%\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=12)\n     )\n   ) %>%\n  opt_row_striping() %>% \n  opt_table_lines(\"none\") %>%\n    fmt_percent(\n    columns = c(`OffExWin%`, `DefExWin%`, `ActualWin%`),\n    decimals = 1\n  )\n\n\n\n\n\n\n  \n    \n      Would an average defense beat an average offense in Win%?\n    \n    \n      The data is pretty evened out.\n    \n  \n  \n    \n      Tm\n      Expected Defense Win %\n      Expected Offense Win %\n      Actual Win %\n    \n  \n  \n    Buffalo Bills\n64.6%\n60.4%\n64.7%\n    New York Jets\n37.5%\n38.6%\n23.5%\n    New England Patriots\n62.4%\n58.3%\n58.8%\n    Miami Dolphins\n52.3%\n43.2%\n52.9%\n    Pittsburgh Steelers\n49.1%\n43.5%\n55.9%\n    Baltimore Ravens\n49.8%\n49.5%\n47.1%\n    Cleveland Browns\n52.6%\n44.4%\n47.1%\n    Cincinnati Bengals\n51.9%\n58.1%\n58.8%\n    Kansas City Chiefs\n53.5%\n60.2%\n70.6%\n    Las Vegas Raiders\n44.2%\n47.8%\n58.8%\n    Los Angeles Chargers\n42.0%\n59.5%\n52.9%\n    Denver Broncos\n59.5%\n42.4%\n41.2%\n    Jacksonville Jaguars\n42.2%\n29.5%\n17.6%\n    Houston Texans\n42.8%\n33.9%\n23.5%\n    Tennessee Titans\n54.9%\n53.5%\n70.6%\n    Indianapolis Colts\n53.4%\n57.1%\n52.9%\n    Green Bay Packers\n52.6%\n57.0%\n76.5%\n    Detroit Lions\n41.2%\n40.9%\n20.6%\n    Minnesota Vikings\n45.7%\n54.2%\n47.1%\n    Chicago Bears\n48.0%\n38.8%\n35.3%\n    Carolina Panthers\n48.3%\n37.7%\n29.4%\n    Tampa Bay Buccaneers\n55.1%\n63.1%\n76.5%\n    New Orleans Saints\n57.6%\n46.5%\n52.9%\n    Atlanta Falcons\n42.0%\n39.1%\n41.2%\n    Seattle Seahawks\n53.3%\n50.5%\n41.2%\n    San Francisco 49ers\n53.4%\n54.4%\n58.8%\n    Los Angeles Rams\n52.4%\n58.1%\n70.6%\n    Arizona Cardinals\n53.3%\n56.9%\n64.7%\n    Dallas Cowboys\n54.4%\n64.8%\n70.6%\n    Philadelphia Eagles\n50.7%\n56.4%\n52.9%\n    Washington Commanders\n44.8%\n42.4%\n41.2%\n    New York Giants\n46.9%\n30.4%\n23.5%\n  \n  \n    \n      By: Brett Parker  |  Source: Pro Football Reference\n    \n  \n  \n\n\n\n\nL\n\n\nCode\nggplot() + \n  geom_dumbbell(\n    data=standingsosrs, \n    aes(y=reorder(Tm, W), x=W, xend=L),\n    size = 2,\n    colour = \"grey\",\n    colour_x = \"green\",\n    colour_xend = \"black\") +\n  labs(title=\"Teams with a Higher OSRS W-L\", subtitle=\"Teams with a higher OSRS than DSRS averaged a 10-7 record in 2021.\", x=\"Wins vs. Losses\", y=\"Team\", caption=\"Source: Pro Football Reference | By Brett Parker\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\n\n\n\n\n\n\nCode\nggplot() + \n  geom_dumbbell(\n    data=standingsdsrs, \n    aes(y=reorder(Tm, W), x=W, xend=L),\n    size = 2,\n    colour = \"gray\",\n    colour_x = \"green\",\n    colour_xend = \"black\") +\n  labs(title=\"Teams with a Higher DSRS W-L\", subtitle=\"Teams with a higher DSRS than OSRS averaged a 7-10 record in 2021.\", x=\"Wins vs. Losses\", y=\"Team\", caption=\"Source: Pro Football Reference | By Brett Parker\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\n\n\n\n\nL\n\n\nCode\nggplot() + \n  geom_point(\n    data=standings21, \n    aes(x=OSRS, y=DSRS, size=`W-L%`), \n    color=\"black\", \n    alpha=.3) +\ngeom_point(\n    data=rams, \n    aes(x=OSRS, y=DSRS, size=`W-L%`), \n    color=\"navy\") +\n  geom_point(\n    data=chiefs, \n    aes(x=OSRS, y=DSRS, size=`W-L%`), \n    color=\"red\") +\n  geom_point(\n    data=bucs, \n    aes(x=OSRS, y=DSRS, size=`W-L%`), \n    color=\"maroon\") +\n  geom_point(\n    data=bengals, \n    aes(x=OSRS, y=DSRS, size=`W-L%`),\n    color=\"orange\") +\n  geom_text_repel(\n    data=bucs, \n    aes(x=OSRS, y=DSRS, label=Tm), hjust=-.45, vjust=-.2) +\n  geom_text_repel(\n    data=rams, \n    aes(x=OSRS, y=DSRS, label=Tm), hjust=0.75, vjust=-0.4) +\n  geom_text_repel(\n    data=bengals, \n    aes(x=OSRS, y=DSRS, label=Tm), hjust=0, vjust=-0.25) +\n  geom_text_repel(\n    data=chiefs, \n    aes(x=OSRS, y=DSRS, label=Tm), hjust=-.5, vjust=-0.25) + \n  labs(\n    x=\"DSRS Rating\", \n    y=\"OSRS Rating\", \n    title=\"Offense Mattered in the Playoffs\", \n    subtitle=\"Each of the four conference championship teams had a higher OSRS than DSRS.\", \n    caption=\"Source: Pro Football Reference | By Brett Parker\"\n    ) +\n  theme_minimal()\n\n\n\n\n\nL"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "blog",
    "section": "",
    "text": "sports\n\n\naudio\n\n\nwriting\n\n\n\n\n\n\n\n\n\n\n\nDec 3, 2022\n\n\nBrett Parker\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nsports\n\n\naudio\n\n\nwriting\n\n\n\n\n\n\n\n\n\n\n\nOct 22, 2022\n\n\nBrett Parker\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nsports\n\n\naudio\n\n\nwriting\n\n\n\n\n\n\n\n\n\n\n\nOct 22, 2022\n\n\nBrett Parker\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]